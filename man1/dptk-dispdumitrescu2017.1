.\"t
.\" Automatically generated by Pandoc 2.7.3
.\"
.TH "DISP-DUMITRESCU2017" "1" "December 9, 2020" "1.2.0" "Dispersion Toolkit Manuals"
.hy
.SH NAME
.PP
disp-dumitrescu2017 - compute dispersion with algorithm of Dumitrescu
and Jiang, 2017
.SH SYNOPSIS
.PP
\f[B]disp-dumitrescu2017\f[R] [\f[B]--i\f[R] \f[I]FILE\f[R]]
[\f[B]--o\f[R] \f[I]FILE\f[R]] [\f[B]--disp\f[R]] [\f[B]--ndisp\f[R]]
[\f[B]--count-boxes\f[R]] [\f[B]--silent\f[R]]
.SH DESCRIPTION
.PP
Computes dispersion, \f[I]n\f[R] * dispersion, and/or the number of RRs
considered of a given point set with cardinality \f[I]n\f[R], almost
according to Dumitrescu and Jiang, 2017
(https://doi.org/10.1007%2Fs00454-017-9871-1).
Instead of using the 2-dimensional algorithm of Aggarwal und Suri, 1987
(https://doi.org/10.1145%2F41958.41988) as described in the publication
of Dumitrescu and Jiang, the implementation uses the simpler while
computationally more expensive algorithm published by Naamad et.
al.\ 1984 ().
.PP
Computational complexity: O(epsilon\[ha](-2) n\[ha](-2/3) n\[ha]2),
.PP
Memory complexity: O(n).
.PP
The measures are written to \f[I]standard output\f[R], or to the file
given by \f[B]--o\f[R] \f[I]FILE\f[R].
.SH OPTIONS
.TP
.B \f[B]--i\f[R] \f[I]FILE\f[R], \f[B]--i\f[R]=\f[I]FILE\f[R]
Retrieves a point set sequence (P_0, P_1, \&..., P_i, \&..., P_m) from
\f[I]FILE\f[R].
Its absence is substituted by \f[I]stdin\f[R].
The end of a point set P_i, which equals the line #eos, starts the
algorithm to emit the requested measure(s) applied on \f[I]P_i\f[R].
.TP
.B \f[B]--o\f[R] \f[I]FILE\f[R], \f[B]--o\f[R]=\f[I]FILE\f[R]
Redirects the measures to \f[I]FILE\f[R], opened in overwrite mode (not
appending mode).
Without \f[I]FILE\f[R], results are forwarded to \f[I]stdout\f[R].
Errors encountered during the program\[cq]s execution are streamed into
\f[I]stderr\f[R], and not into either \f[I]stdout\f[R] or
\f[I]FILE\f[R].
.TP
.B \f[B]--disp\f[R]
Computes dispersion of \f[I]P_i\f[R].
.TP
.B \f[B]--ndisp\f[R]
Computes dispersion of \f[I]P_i\f[R], multiplied by the cardinality
\f[I]n\f[R] of \f[I]P_i\f[R].
.TP
.B \f[B]--count-boxes\f[R]
Counts all empty boxes of \f[I]P_i\f[R], considered as RRs in the
publication.
.TP
.B \f[B]--silent\f[R]
Suppress comments in the output stream, yielding only the computed
value.
The latter could be the point set or its cardinality.
.SH RETURN FORMAT
.SS Dispersion, number of boxes
.PP
A point set of cardinality \f[I]m\f[R] with each axis representing a
computed measure.
.PP
.TS
tab(@);
l l l l.
T{
point set
T}@T{
disp
T}@T{
n*disp
T}@T{
#RR boxes
T}
_
T{
P_0
T}@T{
\&.
T}@T{
\&.
T}@T{
\&.
T}
T{
P_1
T}@T{
\&.
T}@T{
\&.
T}@T{
\&.
T}
T{
\&...
T}@T{
\&.
T}@T{
\&.
T}@T{
\&.
T}
T{
P_m
T}@T{
\&.
T}@T{
\&.
T}@T{
\&.
T}
.TE
.PP
Notice that the first column is not returned.
.SH LIMITATION
.PP
The algorithm requires a 3-dimensional point sets sequence.
.SH AUTHORS
Benjamin Sommer.
