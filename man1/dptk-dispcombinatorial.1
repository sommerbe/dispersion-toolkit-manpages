.\"t
.\" Automatically generated by Pandoc 2.7.3
.\"
.TH "DISP-COMBINATORIAL" "1" "December 2, 2020" "1.2.0" "Dispersion Toolkit Manuals"
.hy
.SH NAME
.PP
disp-combinatorial - compute dispersion with a combinatorial algorithm
(exhaustive search)
.SH SYNOPSIS
.PP
\f[B]disp-combinatorial\f[R] [\f[B]--i\f[R] \f[I]FILE\f[R]]
[\f[B]--o\f[R] \f[I]FILE\f[R]] [\f[B]--disp\f[R]] [\f[B]--ndisp\f[R]]
[\f[B]--count-boxes\f[R]] [\f[B]--boxes\f[R]]
[\f[B]--interior-boxes\f[R]] [\f[B]--greatest-box\f[R]]
[\f[B]--silent\f[R]]
.SH DESCRIPTION
.PP
Computes dispersion, \f[I]n\f[R] * dispersion, the number of empty
boxes, and/or a list of empty boxes of a given point set with
cardinality \f[I]n\f[R].
.PP
The measures are written to \f[I]standard output\f[R], or to the file
given by \f[B]--o\f[R] \f[I]FILE\f[R].
.SH OPTIONS
.TP
.B \f[B]--i\f[R] \f[I]FILE\f[R], \f[B]--i\f[R]=\f[I]FILE\f[R]
Retrieves a point set sequence (P_0, P_1, \&..., P_i, \&..., P_m) from
\f[I]FILE\f[R].
Its absence is substituted by \f[I]stdin\f[R].
The end of a point set P_i, which equals the line #eos, starts the
algorithm to emit the requested measure(s) applied on \f[I]P_i\f[R].
.TP
.B \f[B]--o\f[R] \f[I]FILE\f[R], \f[B]--o\f[R]=\f[I]FILE\f[R]
Redirects the measures to \f[I]FILE\f[R], opened in overwrite mode (not
appending mode).
Without \f[I]FILE\f[R], results are forwarded to \f[I]stdout\f[R].
Errors encountered during the program\[cq]s execution are streamed into
\f[I]stderr\f[R], and not into either \f[I]stdout\f[R] or
\f[I]FILE\f[R].
.TP
.B \f[B]--disp\f[R]
Computes dispersion of \f[I]P_i\f[R].
.TP
.B \f[B]--ndisp\f[R]
Computes dispersion of \f[I]P_i\f[R], multiplied by the cardinality
\f[I]n\f[R] of \f[I]P_i\f[R].
.TP
.B \f[B]--count-boxes\f[R]
Counts all empty boxes of \f[I]P_i\f[R], including interiour and
exteriour boxes.
.TP
.B \f[B]--boxes\f[R]
Feeds all empty boxes of \f[I]P_i\f[R], including interiour and
exteriour boxes, to output.
With the smallest point of a box \f[I]B\f[R] being (low_0 low_1),
i.e.\ no other point of \f[I]B\f[R] has smaller coordinates, and with
the upper point of \f[I]B\f[R] being (up_0 up_1), i.e.\ no other point
of \f[I]B\f[R] has greater coordinates, \f[I]B\f[R] is formatted as a
tuple (low_0 low_1 up_0 up_1) on a distinct line of the output.
.TP
.B \f[B]--interior-boxes\f[R]
Similar to the option \f[B]--boxes\f[R] with the exception of
\f[I]B\f[R] being restricted to integriour boxes.
A Box is integriour if it does not intersect with the domain boundary of
\f[I]P_i\f[R].
.TP
.B \f[B]--greatest-box\f[R]
Similar to the option \f[B]--boxes\f[R] with the exception of
\f[I]B\f[R] being the first greatest empty box found during the
exhaustive search.
.TP
.B \f[B]--silent\f[R]
Suppress comments in the output stream, yielding only the computed
value.
The latter could be the point set or its cardinality.
.SH RETURN FORMAT
.SS Greatest box
.PP
A point set of cardinality \f[I]m\f[R] with each axis representing a
coordinate of a box,
.PP
.TS
tab(@);
l l l l l.
T{
point set
T}@T{
low_0
T}@T{
low_1
T}@T{
up_0
T}@T{
up_1
T}
_
T{
P_0
T}@T{
\&.
T}@T{
\&.
T}@T{
\&.
T}@T{
\&.
T}
T{
P_1
T}@T{
\&.
T}@T{
\&.
T}@T{
\&.
T}@T{
\&.
T}
T{
\&...
T}@T{
\&.
T}@T{
\&.
T}@T{
\&.
T}@T{
\&.
T}
T{
P_m
T}@T{
\&.
T}@T{
\&.
T}@T{
\&.
T}@T{
\&.
,
T}
.TE
.PP
where low_i is the smallest coordinate along axis i, and up_i the
greatest one.
Notice that the first column is not returned.
.SS Boxes
.PP
A point set sequence, where each point set is a list of the tuple (low_0
low_1 up_0 up_1).
.SS Dispersion, number of boxes
.PP
A point set of cardinality \f[I]m\f[R] with each axis representing a
computed measure.
.PP
.TS
tab(@);
l l l l.
T{
point set
T}@T{
disp
T}@T{
n*disp
T}@T{
#boxes
T}
_
T{
P_0
T}@T{
\&.
T}@T{
\&.
T}@T{
\&.
T}
T{
P_1
T}@T{
\&.
T}@T{
\&.
T}@T{
\&.
T}
T{
\&...
T}@T{
\&.
T}@T{
\&.
T}@T{
\&.
T}
T{
P_m
T}@T{
\&.
T}@T{
\&.
T}@T{
\&.
T}
.TE
.PP
Notice that the first column is not returned.
.SH LIMITATION
.PP
The algorithm requires a two-dimensional point sets sequence.
.SH AUTHORS
Benjamin Sommer.
